{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyMLBMropiMNGbbtdzSx2WU3",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ShreyaPatil277/IPL-Data-Analysis-2008-2024-/blob/main/IPL_Analysis.ipynb%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# IPL Complete Analysis(2008-2024)"
      ],
      "metadata": {
        "id": "bDBqrIaFg59z"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "**IPL Data Analysis –**\n",
        "The IPL has evolved into a high-scoring, competitive tournament with increasing runs per match and aggressive batting strategies. Winning the toss gives only a slight advantage, and chasing teams often perform strongly. Teams like Mumbai Indians and Chennai Super Kings consistently dominate in wins and titles, while certain venues show “lucky” trends for specific teams.\n",
        "\n",
        "Top batsmen, including V Kohli and MS Dhoni, contribute heavily through boundaries, while leading bowlers like Dwayne Bravo and Lasith Malinga have consistently impacted match outcomes. Man of the Match awards highlight key players who shape results season after season.\n",
        "\n",
        "Overall, the IPL showcases a blend of batting brilliance, strategic bowling, and player performances, making data-driven insights valuable for teams and fans alike."
      ],
      "metadata": {
        "id": "rZAiL3Ik023M"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "C9m0Nxw9a-us"
      },
      "outputs": [],
      "source": [
        "import numpy as np # linear algebra\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
        "\n",
        "# Input data files are available in the read-only \"../input/\" directory\n",
        "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
        "\n",
        "import os\n",
        "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
        "    for filename in filenames:\n",
        "        print(os.path.join(dirname, filename))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.upload()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "id": "pkS7vi4_cSqw",
        "outputId": "3f667138-650e-41a0-d49e-9ec2a732096c"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-85e11ab1-ecb5-4ff4-a115-c71e95aadcbb\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-85e11ab1-ecb5-4ff4-a115-c71e95aadcbb\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving kaggle.json to kaggle.json\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'kaggle.json': b'{\"username\":\"shreyagpatil2725\",\"key\":\"4f2b90c2fcdf6df742cd439a4333e9a0\"}'}"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!mkdir -p ~/.kaggle\n",
        "!mv kaggle.json ~/.kaggle/\n",
        "!chmod 600 ~/.kaggle/kaggle.json"
      ],
      "metadata": {
        "id": "2FgtMufWcgPB"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install kaggle"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sDPiRFVlcksp",
        "outputId": "2626ef10-d883-42bd-c863-5894dcc9a042"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: kaggle in /usr/local/lib/python3.12/dist-packages (1.7.4.5)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.12/dist-packages (from kaggle) (6.2.0)\n",
            "Requirement already satisfied: certifi>=14.05.14 in /usr/local/lib/python3.12/dist-packages (from kaggle) (2025.10.5)\n",
            "Requirement already satisfied: charset-normalizer in /usr/local/lib/python3.12/dist-packages (from kaggle) (3.4.3)\n",
            "Requirement already satisfied: idna in /usr/local/lib/python3.12/dist-packages (from kaggle) (3.10)\n",
            "Requirement already satisfied: protobuf in /usr/local/lib/python3.12/dist-packages (from kaggle) (5.29.5)\n",
            "Requirement already satisfied: python-dateutil>=2.5.3 in /usr/local/lib/python3.12/dist-packages (from kaggle) (2.9.0.post0)\n",
            "Requirement already satisfied: python-slugify in /usr/local/lib/python3.12/dist-packages (from kaggle) (8.0.4)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.12/dist-packages (from kaggle) (2.32.4)\n",
            "Requirement already satisfied: setuptools>=21.0.0 in /usr/local/lib/python3.12/dist-packages (from kaggle) (75.2.0)\n",
            "Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.12/dist-packages (from kaggle) (1.17.0)\n",
            "Requirement already satisfied: text-unidecode in /usr/local/lib/python3.12/dist-packages (from kaggle) (1.3)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.12/dist-packages (from kaggle) (4.67.1)\n",
            "Requirement already satisfied: urllib3>=1.15.1 in /usr/local/lib/python3.12/dist-packages (from kaggle) (2.5.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.12/dist-packages (from kaggle) (0.5.1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!kaggle datasets download -d patrickb1912/ipl-complete-dataset-20082020"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "POYDlruTco_B",
        "outputId": "9c6e42e5-e057-428c-f32f-94d70257b9b1"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dataset URL: https://www.kaggle.com/datasets/patrickb1912/ipl-complete-dataset-20082020\n",
            "License(s): DbCL-1.0\n",
            "Downloading ipl-complete-dataset-20082020.zip to /content\n",
            "  0% 0.00/1.82M [00:00<?, ?B/s]\n",
            "100% 1.82M/1.82M [00:00<00:00, 745MB/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!unzip ipl-complete-dataset-20082020.zip -d /content/ipl_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CXq6LUHrcr6a",
        "outputId": "700e0f71-15bb-4ae8-9cdf-adef6a750529"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  ipl-complete-dataset-20082020.zip\n",
            "  inflating: /content/ipl_data/deliveries.csv  \n",
            "  inflating: /content/ipl_data/matches.csv  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "matches = pd.read_csv(\"/content/ipl_data/matches.csv\")\n",
        "deliveries = pd.read_csv(\"/content/ipl_data/deliveries.csv\")\n",
        "\n",
        "print(\"Data ready for exploration\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k0bBho_fc3po",
        "outputId": "77a96b72-0543-42d0-fd1b-28659f57f4d6"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data ready for exploration\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from IPython.display import display,HTML\n",
        "c1,c2,f1,f2,fs1,fs2=\\\n",
        "'#650076','#eb3446','Boogaloo','Smokum',70,10\n",
        "def dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n",
        "    display(HTML(\"\"\"<style>\n",
        "    @import 'https://fonts.googleapis.com/css?family=\"\"\"\\\n",
        "    +font+\"\"\"&effect=3d-float';</style>\n",
        "    <h4 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n",
        "    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n",
        "    str(fontsize)+\"\"\"px;'>%s</h4>\"\"\"%string))\n",
        "\n",
        "\n",
        "dhtml('Detailed Analysis of IPL data (2008-2024)' )\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 201
        },
        "id": "khvTC4O8dGw6",
        "outputId": "131fb485-73dd-4361-96ec-2622b0429cc3"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<style>\n",
              "    @import 'https://fonts.googleapis.com/css?family=Boogaloo&effect=3d-float';</style>\n",
              "    <h4 class='font-effect-3d-float' style='font-family:Boogaloo; color:#650076; font-size:70px;'>Detailed Analysis of IPL data (2008-2024)</h4>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "**Topics covered in this notebook :**\n",
        "\n",
        "What was the count of matches played in each season?\n",
        "\n",
        "How many runs were scored in each season?\n",
        "\n",
        "What were the runs scored per match in different seasons?\n",
        "\n",
        "Who has umpired the most?\n",
        "\n",
        "Which team has won the most tosses?\n",
        "\n",
        "What does the team decide after winning the toss?\n",
        "\n",
        "How toss decision varies across seasons?\n",
        "\n",
        "Does winning the toss implies winning the game?\n",
        "\n",
        "How many times chasing team has won the match?\n",
        "\n",
        "Which all teams had won this tournament?\n",
        "\n",
        "Which team has played the most number of matches?\n",
        "\n",
        "Which team has won the most number of times?\n",
        "\n",
        "Which team has the highest winning percentage?\n",
        "\n",
        "Is there any lucky venue for a particular team?\n",
        "\n",
        "Comparison between two teams\n",
        "\n",
        "Particular Batsmen analysis\n",
        "\n",
        "Innings wise comparison between teams\n",
        "\n",
        "Which team has scored the most number of 200+ scores?\n",
        "\n",
        "Which team has conceded 200+ scores the most?\n",
        "\n",
        "What was the highest run scored by a team in a single match?\n",
        "\n",
        "Which is the biggest win in terms of run margin?\n",
        "\n",
        "Which batsmen have played the most number of balls?\n",
        "\n",
        "Who are the leading run-scorers of all time?\n",
        "\n",
        "Who has hit the most number of 4's?\n",
        "\n",
        "Who has hit the most number of 6's?\n",
        "\n",
        "Who has the highest strike rate?\n",
        "\n",
        "Who is the leading wicket-taker?\n",
        "\n",
        "Which stadium has hosted the most number of matches?\n",
        "\n",
        "Who has won the most MOM awards?\n",
        "\n",
        "What is the count of fours hit in each season?\n",
        "\n",
        "What is the count of sixes hit in each season?\n",
        "\n",
        "What is the count of runs scored from boundaries in each season?\n",
        "\n",
        "What is the run contribution from boundaries in each season?\n",
        "\n",
        "Which team has scored the most runs in the first 6 overs?\n",
        "\n",
        "Which team has scored the most runs in the last 4 overs?\n",
        "\n",
        "Which team has the best scoring run-rate in the first 6 overs?\n",
        "\n",
        "Which team has the best scoring run-rate in the last 4 overs?\n",
        "\n"
      ],
      "metadata": {
        "id": "0zgl56Etda_F"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import plotly\n",
        "import plotly.express as px\n",
        "import plotly.graph_objs as go\n",
        "from plotly.offline import init_notebook_mode, plot, iplot\n",
        "from plotly import tools\n",
        "from warnings import filterwarnings\n",
        "filterwarnings('ignore')\n"
      ],
      "metadata": {
        "id": "YMuF8NGJdwom"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "matches.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "id": "nXp3ZVene3Rl",
        "outputId": "360edd2c-710f-4f93-bf57-e73fcde0169f"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id   season        city        date match_type player_of_match  \\\n",
              "0  335982  2007/08   Bangalore  2008-04-18     League     BB McCullum   \n",
              "1  335983  2007/08  Chandigarh  2008-04-19     League      MEK Hussey   \n",
              "2  335984  2007/08       Delhi  2008-04-19     League     MF Maharoof   \n",
              "3  335985  2007/08      Mumbai  2008-04-20     League      MV Boucher   \n",
              "4  335986  2007/08     Kolkata  2008-04-20     League       DJ Hussey   \n",
              "\n",
              "                                        venue                        team1  \\\n",
              "0                       M Chinnaswamy Stadium  Royal Challengers Bangalore   \n",
              "1  Punjab Cricket Association Stadium, Mohali              Kings XI Punjab   \n",
              "2                            Feroz Shah Kotla             Delhi Daredevils   \n",
              "3                            Wankhede Stadium               Mumbai Indians   \n",
              "4                                Eden Gardens        Kolkata Knight Riders   \n",
              "\n",
              "                         team2                  toss_winner toss_decision  \\\n",
              "0        Kolkata Knight Riders  Royal Challengers Bangalore         field   \n",
              "1          Chennai Super Kings          Chennai Super Kings           bat   \n",
              "2             Rajasthan Royals             Rajasthan Royals           bat   \n",
              "3  Royal Challengers Bangalore               Mumbai Indians           bat   \n",
              "4              Deccan Chargers              Deccan Chargers           bat   \n",
              "\n",
              "                        winner   result  result_margin  target_runs  \\\n",
              "0        Kolkata Knight Riders     runs          140.0        223.0   \n",
              "1          Chennai Super Kings     runs           33.0        241.0   \n",
              "2             Delhi Daredevils  wickets            9.0        130.0   \n",
              "3  Royal Challengers Bangalore  wickets            5.0        166.0   \n",
              "4        Kolkata Knight Riders  wickets            5.0        111.0   \n",
              "\n",
              "   target_overs super_over method    umpire1         umpire2  \n",
              "0          20.0          N    NaN  Asad Rauf     RE Koertzen  \n",
              "1          20.0          N    NaN  MR Benson      SL Shastri  \n",
              "2          20.0          N    NaN  Aleem Dar  GA Pratapkumar  \n",
              "3          20.0          N    NaN   SJ Davis       DJ Harper  \n",
              "4          20.0          N    NaN  BF Bowden     K Hariharan  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-caea4219-f881-408a-baad-0c792a84cdb2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>season</th>\n",
              "      <th>city</th>\n",
              "      <th>date</th>\n",
              "      <th>match_type</th>\n",
              "      <th>player_of_match</th>\n",
              "      <th>venue</th>\n",
              "      <th>team1</th>\n",
              "      <th>team2</th>\n",
              "      <th>toss_winner</th>\n",
              "      <th>toss_decision</th>\n",
              "      <th>winner</th>\n",
              "      <th>result</th>\n",
              "      <th>result_margin</th>\n",
              "      <th>target_runs</th>\n",
              "      <th>target_overs</th>\n",
              "      <th>super_over</th>\n",
              "      <th>method</th>\n",
              "      <th>umpire1</th>\n",
              "      <th>umpire2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>335982</td>\n",
              "      <td>2007/08</td>\n",
              "      <td>Bangalore</td>\n",
              "      <td>2008-04-18</td>\n",
              "      <td>League</td>\n",
              "      <td>BB McCullum</td>\n",
              "      <td>M Chinnaswamy Stadium</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>field</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>runs</td>\n",
              "      <td>140.0</td>\n",
              "      <td>223.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Asad Rauf</td>\n",
              "      <td>RE Koertzen</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>335983</td>\n",
              "      <td>2007/08</td>\n",
              "      <td>Chandigarh</td>\n",
              "      <td>2008-04-19</td>\n",
              "      <td>League</td>\n",
              "      <td>MEK Hussey</td>\n",
              "      <td>Punjab Cricket Association Stadium, Mohali</td>\n",
              "      <td>Kings XI Punjab</td>\n",
              "      <td>Chennai Super Kings</td>\n",
              "      <td>Chennai Super Kings</td>\n",
              "      <td>bat</td>\n",
              "      <td>Chennai Super Kings</td>\n",
              "      <td>runs</td>\n",
              "      <td>33.0</td>\n",
              "      <td>241.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MR Benson</td>\n",
              "      <td>SL Shastri</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>335984</td>\n",
              "      <td>2007/08</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>2008-04-19</td>\n",
              "      <td>League</td>\n",
              "      <td>MF Maharoof</td>\n",
              "      <td>Feroz Shah Kotla</td>\n",
              "      <td>Delhi Daredevils</td>\n",
              "      <td>Rajasthan Royals</td>\n",
              "      <td>Rajasthan Royals</td>\n",
              "      <td>bat</td>\n",
              "      <td>Delhi Daredevils</td>\n",
              "      <td>wickets</td>\n",
              "      <td>9.0</td>\n",
              "      <td>130.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Aleem Dar</td>\n",
              "      <td>GA Pratapkumar</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>335985</td>\n",
              "      <td>2007/08</td>\n",
              "      <td>Mumbai</td>\n",
              "      <td>2008-04-20</td>\n",
              "      <td>League</td>\n",
              "      <td>MV Boucher</td>\n",
              "      <td>Wankhede Stadium</td>\n",
              "      <td>Mumbai Indians</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>Mumbai Indians</td>\n",
              "      <td>bat</td>\n",
              "      <td>Royal Challengers Bangalore</td>\n",
              "      <td>wickets</td>\n",
              "      <td>5.0</td>\n",
              "      <td>166.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SJ Davis</td>\n",
              "      <td>DJ Harper</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>335986</td>\n",
              "      <td>2007/08</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>2008-04-20</td>\n",
              "      <td>League</td>\n",
              "      <td>DJ Hussey</td>\n",
              "      <td>Eden Gardens</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>Deccan Chargers</td>\n",
              "      <td>Deccan Chargers</td>\n",
              "      <td>bat</td>\n",
              "      <td>Kolkata Knight Riders</td>\n",
              "      <td>wickets</td>\n",
              "      <td>5.0</td>\n",
              "      <td>111.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BF Bowden</td>\n",
              "      <td>K Hariharan</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-caea4219-f881-408a-baad-0c792a84cdb2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-caea4219-f881-408a-baad-0c792a84cdb2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-caea4219-f881-408a-baad-0c792a84cdb2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-d71fec9d-4efb-419e-b06d-34a55fdd6741\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d71fec9d-4efb-419e-b06d-34a55fdd6741')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-d71fec9d-4efb-419e-b06d-34a55fdd6741 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "matches",
              "summary": "{\n  \"name\": \"matches\",\n  \"rows\": 1095,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 367740,\n        \"min\": 335982,\n        \"max\": 1426312,\n        \"num_unique_values\": 1095,\n        \"samples\": [\n          980933,\n          419130,\n          392213\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"season\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"2007/08\",\n          \"2009\",\n          \"2013\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 36,\n        \"samples\": [\n          \"Mohali\",\n          \"Johannesburg\",\n          \"Abu Dhabi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 823,\n        \"samples\": [\n          \"2021-04-23\",\n          \"2012-04-06\",\n          \"2009-05-12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"match_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Semi Final\",\n          \"Elimination Final\",\n          \"League\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"player_of_match\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 291,\n        \"samples\": [\n          \"PD Collingwood\",\n          \"DR Sams\",\n          \"CH Gayle\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"venue\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"M Chinnaswamy Stadium\",\n          \"Sawai Mansingh Stadium\",\n          \"Saurashtra Cricket Association Stadium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"team1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Royal Challengers Bangalore\",\n          \"Rajasthan Royals\",\n          \"Gujarat Lions\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"team2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Kolkata Knight Riders\",\n          \"Kings XI Punjab\",\n          \"Rising Pune Supergiants\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"toss_winner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Royal Challengers Bangalore\",\n          \"Kings XI Punjab\",\n          \"Gujarat Lions\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"toss_decision\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"bat\",\n          \"field\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"winner\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Kolkata Knight Riders\",\n          \"Kings XI Punjab\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"wickets\",\n          \"no result\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result_margin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.787443729011244,\n        \"min\": 1.0,\n        \"max\": 146.0,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          59.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target_runs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33.42704825769166,\n        \"min\": 43.0,\n        \"max\": 288.0,\n        \"num_unique_values\": 170,\n        \"samples\": [\n          249.0,\n          144.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target_overs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5811083157739763,\n        \"min\": 5.0,\n        \"max\": 20.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          12.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"super_over\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Y\",\n          \"N\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"method\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"D/L\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"umpire1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 62,\n        \"samples\": [\n          \"Navdeep Singh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"umpire2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 62,\n        \"samples\": [\n          \"AY Dandekar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matches.isnull().sum()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "-vPj25kdfcWW",
        "outputId": "36185e5a-9720-4c56-a029-2e1a7b562a96"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                    0\n",
              "season                0\n",
              "city                 51\n",
              "date                  0\n",
              "match_type            0\n",
              "player_of_match       5\n",
              "venue                 0\n",
              "team1                 0\n",
              "team2                 0\n",
              "toss_winner           0\n",
              "toss_decision         0\n",
              "winner                5\n",
              "result                0\n",
              "result_margin        19\n",
              "target_runs           3\n",
              "target_overs          3\n",
              "super_over            0\n",
              "method             1074\n",
              "umpire1               0\n",
              "umpire2               0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>season</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>city</th>\n",
              "      <td>51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>match_type</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>player_of_match</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>venue</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>team1</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>team2</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>toss_winner</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>toss_decision</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>winner</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>result</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>result_margin</th>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>target_runs</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>target_overs</th>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>super_over</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>method</th>\n",
              "      <td>1074</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>umpire1</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>umpire2</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matches.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sZG44q9pflxl",
        "outputId": "de3e43d4-01e1-41c7-90cc-066516dd9549"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'season', 'city', 'date', 'match_type', 'player_of_match',\n",
              "       'venue', 'team1', 'team2', 'toss_winner', 'toss_decision', 'winner',\n",
              "       'result', 'result_margin', 'target_runs', 'target_overs', 'super_over',\n",
              "       'method', 'umpire1', 'umpire2'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# What was the count of matches played in each season?\n"
      ],
      "metadata": {
        "id": "bWmf_b2AhLga"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "num_bars = len(matches_per_season)\n",
        "\n",
        "colors = ['lightblue'] * num_bars\n",
        "colors[5] = 'black'\n",
        "\n",
        "plt.figure(figsize=(15,5))\n",
        "sns.barplot(x=matches_per_season.index,\n",
        "            y=matches_per_season.values,\n",
        "            palette=colors)\n",
        "\n",
        "plt.title(\"Matches Played per Season\", fontsize=14)\n",
        "plt.xlabel(\"Season\");plt.ylabel(\"Matches\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 433
        },
        "id": "X_VUtnklih3h",
        "outputId": "e49f63e2-9919-4fb4-af1b-6fd957af0351"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x500 with 1 Axes>"
            ],
            "image/png": "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+Ext29+9Lj4+XjabTUFBQVmqNc3f3WghM5o0aaJXX31Vffr00bfffmsPzYKDg2Wz2XT27NkMrWfcuHHy9/fXjh07VLZsWYdl6Z1imjt3br322mt67bXXdOTIEW3YsEHvv/++3n77bV29elX//ve/7XVY76iaJi4uzj4HAABkH65pBgDAPSQqKkrFihXTH3/8oXbt2ilfvny3nXv27FklJCQoMjLS6eij7du36+rVq06vyZUrl6T0j2BJO63s66+/vpNNSFfdunUlSZs3b870awMCAtSkSRNNmTJFL730kq5evar169dnd4lOstJfSapXr56qVq2qDz/8UF9//bV+/fVXdevWzX5EUprM9iTtzqffffed07L0xjIivdcdO3ZMJ06cUKVKleynKt7J3192Su/6cnXr1tW5c+f066+/Zmgdhw4dUoUKFZwCs1OnTjncwTU9pUqVUp8+fbRx40YFBgZq5cqV9mXVq1fXlStX7Kc53yomJkaS/vZUawAAkDmEZgAA3ENy5cqlL774Qp9//rkmTpz4l3MLFy6sgIAA7dy5U1euXLGP//nnnxo4cGC6r0m7APqJEyeclj322GMqXry4PvzwQ61bt85p+Z0cgda2bVuVKFFCU6dO1aZNm5yWJycn6/vvv7c/37x5s65du+Y0L+3IKH9//yzXklFZ6W+aZ599VufPn1fv3r0lyenUTEnq3bu3goKC9PLLL2v//v1Oy69cuWK/lph084LxuXLl0tSpUx2OaEpMTNRrr72W6e2Tbl7g/7///a/9uTFGL730km7cuKFevXpludasOnLkiN577z1dvHgx3fd4++23Jd28eUSaQYMGSbp5A4pz5845vS4uLk4HDx60P4+IiNBvv/3mcJTdtWvX9Pzzzys5OdnhtWfOnNG+ffuc1vnnn38qKSnJYT9Mu3j/qFGjHNZz4sQJTZ06Vd7e3n955CgAAMg8Ts8EAOAeU6tWLdWqVetv53l5eemFF17QlClTVK1aNbVp00aJiYlas2aNIiIiVLRoUafXNGvWTJMnT9Yzzzyjjh07Kk+ePIqIiNBTTz0lPz8/ffLJJ2rVqpUefvhhtWrVStWqVVNiYqJ2796tK1euaNeuXVnaJj8/P3366ad6+OGH1bhxYzVr1kxVqlSRzWbTsWPH9N1336lAgQL2C7a/9dZb2rBhgxo1aqRSpUrJ399fO3fuVHR0tEqXLq327dtnqY7MyEp/03Tv3l0jR47UyZMnVbNmTac7hko3r2G3ZMkSde7cWdWqVVOrVq1Uvnx5JSUl6ejRo9q4caPq16+vtWvXSpLKlCmjMWPGaOzYsapataoef/xxeXt767PPPlPVqlUVGxub6W2MiopSZGSknnjiCRUqVEjR0dHavn276tWr5xAMZrbWrEpISNDAgQM1YsQINWzYUJUrV1ZAQID++OMPffXVVzp37pxq1qzpUFurVq30yiuv6NVXX1WZMmXUqlUrRURE6Ny5c/rtt9/03Xff6bXXXlOFChUkSQMHDtTAgQNVvXp1derUSSkpKVq/fr2MMapWrZr9hgvSzaC4evXqqlatmqpWrapixYrp3LlzWrFihZKTkzV8+HD73KeeekrLly/XihUrVLVqVT366KO6fPmyPv74Y50/f15Tpkxx+SnFAADccwwAALgrHTlyxEgyUVFRGZrv5+dnIiIiHMauX79uXn/9dVO2bFnj5+dnSpQoYV588UVz8eJFExER4TTfGGMmTZpkypYta3x8fIwk07hxY4flv/32m+nbt68pXry48fHxMYULFzZNmjQxixYtss/ZsGGDkWTGjh172+3q2bOn07Lff//dDB482F5vcHCwqVChgnn66adNdHS0fd7atWtNjx49zP3332+CgoJMYGCgqVixonnppZfMmTNnMtSvsWPHGklmyZIlGZqfXr+y0t803bt3N5LM+++//5fv+/PPP5u+ffuaiIgI4+vra/Lly2eqVKliBg0aZH766Sen+bNnzzYVK1Y0vr6+pnjx4mb48OHmypUr6f5d3k5abzZs2GBmz55tKlWqZPz8/EyRIkXM4MGDTWJi4h3V+lf7wF+5du2a+eyzz8wzzzxjqlWrZgoWLGhy5cpl8uXLZxo2bGimTp1qrl69mu5r169fb9q0aWMKFSpkfHx8TFhYmImMjDSvvvqqOX78uH1eamqqef/9902lSpWMv7+/CQsLM3379jWnT582jRs3Nrd+/P7zzz/NuHHjTKNGjUyRIkWMr6+vKVq0qGnVqpVZs2aNUw3Jyclm8uTJpkqVKsbPz88EBQWZxo0bmxUrVjjNnT9/vpFk5s+f77Tsr36+AADA/7EZY4xn4joAAABkVZUqVXTkyBGdPHkyx10Afty4cRo/frw2bNigJk2aeLocAACALOGa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nLv6cfToUdlsNqfHli1bXLl5WeLOfcQYo8mTJ6tcuXLy8/NTsWLF9Prrr7tq07LEXf0YN25cuvtInjx5XLl5mebO/WPdunWqV6+egoKCVKhQIXXs2FFHjx510ZZlnTt78sknn+iBBx5Q7ty5FRERof/93/911WYhG2XHPrJnzx517dpV4eHhCggIUIUKFfT22287rOPUqVN68sknVa5cOXl5eWnIkCHu2LxMc1c/li9frpYtW6pQoUIKDg5WZGSk1q1b55ZtzAx39eP7779XgwYNVKBAAQUEBKh8+fKaNm2aW7Yxs9zVk1v98MMP8vb2/tvPta5wT4dm7gp9evXqle4HrUqVKjnV1Lt3b40ePVqSdP78eXXr1k3BwcHKmzev+vbtq0uXLjnM9+QHlo0bN6p///7asmWL1q9fr+TkZD300EO6fPmyfc7QoUO1atUqLVu2TBs3btTJkyfVoUMH+/IbN26odevWun79un788UctXLhQCxYs0JgxY+xzZs2apVGjRmncuHHav3+/xo8fr/79+2vVqlUu38acGAyOHz9e3bt3lyR98MEHatKkiYKDg2Wz2XThwgWn+RnZj1wlO/aRNH369FGXLl3SfZ8bN24oICBAgwYNUosWLVy2PXfKXf348ccfVbVqVX322Wf673//q969e6tHjx768ssvXbZtWeGufvj4+KhHjx76+uuvFRsbq+nTp2v27NkaO3asy7Ytq9zVkzTJycnq2rWrHnzwwWzfluzg7n588803OnXqlP1Rs2bNbN+mO+XOngwePFhz5szR5MmT9fPPP2vlypWqU6eOS7Yrq9zVj+HDhzvsG6dOnVLFihXVuXNnl21bVrirH0eOHFHbtm3VrFkz7d69W+vWrdPZs2fTXY+nuasna9asUbdu3fTcc89p3759mjlzpqZNm6b33nvPZduWxp1fYGNiYlSjRg35+fmpTJkyWrBgQbo1pX2nOXr0qPr27atSpUopICBA9913n8aOHavr16871ObJ//zMjn1kx44dKly4sD788EPt379fL7/8skaNGuXw95+UlKRChQpp9OjRqlatmlu3MTPc1Y9NmzapZcuWWr16tXbs2KGmTZuqTZs22rVrl1u39++4qx958uTRgAEDtGnTJh08eFCjR4/W6NGj9cEHH7h1ezPCXT1Jc+HCBfXo0UPNmzd3y/Y5MfewqKgo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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "matches_per_season = matches['season'].value_counts().sort_index()\n",
        "\n",
        "colors = ['lightblue'] * len(matches_per_season)\n",
        "colors[5] = 'black'\n",
        "\n",
        "fig = px.bar(x=matches_per_season.index,\n",
        "             y=matches_per_season.values,\n",
        "             title=\"Matches Played per Season\",\n",
        "             labels={'x':'Season','y':'Matches'},\n",
        "             color=matches_per_season.index,\n",
        "             color_discrete_sequence=colors)\n",
        "\n",
        "fig.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "ATDJVOgblaSl",
        "outputId": "d51823fd-af06-4ba0-9906-05413dc3befe"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"2d538b9b-d7a1-43eb-b995-b529433b2cba\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"2d538b9b-d7a1-43eb-b995-b529433b2cba\")) {                    Plotly.newPlot(                        \"2d538b9b-d7a1-43eb-b995-b529433b2cba\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2007\\u002f08\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2007\\u002f08\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2007\\u002f08\",\"offsetgroup\":\"2007\\u002f08\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2007\\u002f08\"],\"xaxis\":\"x\",\"y\":[58],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2009\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2009\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2009\",\"offsetgroup\":\"2009\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2009\"],\"xaxis\":\"x\",\"y\":[57],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2009\\u002f10\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2009\\u002f10\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2009\\u002f10\",\"offsetgroup\":\"2009\\u002f10\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2009\\u002f10\"],\"xaxis\":\"x\",\"y\":[60],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2011\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2011\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2011\",\"offsetgroup\":\"2011\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2011\"],\"xaxis\":\"x\",\"y\":[73],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2012\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2012\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2012\",\"offsetgroup\":\"2012\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2012\"],\"xaxis\":\"x\",\"y\":[74],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2013\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2013\",\"marker\":{\"color\":\"black\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2013\",\"offsetgroup\":\"2013\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2013\"],\"xaxis\":\"x\",\"y\":[76],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2014\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2014\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2014\",\"offsetgroup\":\"2014\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2014\"],\"xaxis\":\"x\",\"y\":[60],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2015\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2015\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2015\",\"offsetgroup\":\"2015\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2015\"],\"xaxis\":\"x\",\"y\":[59],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2016\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2016\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2016\",\"offsetgroup\":\"2016\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2016\"],\"xaxis\":\"x\",\"y\":[60],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2017\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2017\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2017\",\"offsetgroup\":\"2017\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2017\"],\"xaxis\":\"x\",\"y\":[59],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2018\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2018\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2018\",\"offsetgroup\":\"2018\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2018\"],\"xaxis\":\"x\",\"y\":[60],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2019\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2019\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2019\",\"offsetgroup\":\"2019\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2019\"],\"xaxis\":\"x\",\"y\":[60],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2020\\u002f21\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2020\\u002f21\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2020\\u002f21\",\"offsetgroup\":\"2020\\u002f21\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2020\\u002f21\"],\"xaxis\":\"x\",\"y\":[60],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2021\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2021\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2021\",\"offsetgroup\":\"2021\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2021\"],\"xaxis\":\"x\",\"y\":[60],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2022\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2022\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2022\",\"offsetgroup\":\"2022\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2022\"],\"xaxis\":\"x\",\"y\":[74],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2023\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2023\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2023\",\"offsetgroup\":\"2023\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2023\"],\"xaxis\":\"x\",\"y\":[74],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=2024\\u003cbr\\u003eSeason=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2024\",\"marker\":{\"color\":\"lightblue\",\"pattern\":{\"shape\":\"\"}},\"name\":\"2024\",\"offsetgroup\":\"2024\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"2024\"],\"xaxis\":\"x\",\"y\":[71],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Season\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Matches\"}},\"legend\":{\"title\":{\"text\":\"color\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Matches Played per Season\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('2d538b9b-d7a1-43eb-b995-b529433b2cba');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# How many runs were scored in each season?\n"
      ],
      "metadata": {
        "id": "HTPxmw6yjoxg"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "c45ab351",
        "outputId": "0aed14a7-1a06-4ae8-83e4-24c9e36a488c"
      },
      "source": [
        "deliveries_with_season = pd.merge(deliveries, matches[['id', 'season']], left_on='match_id', right_on='id', how='left')\n",
        "season_runs = deliveries_with_season.groupby('season')['total_runs'].sum()\n",
        "\n",
        "fig = px.bar(season_runs, x=season_runs.index, y=season_runs.values,\n",
        "       title=\"Total Runs Scored per Season\", labels={'x':'Season','y':'Runs'})\n",
        "fig.show()"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"26e18305-b066-429a-8b19-e039d300ed0d\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"26e18305-b066-429a-8b19-e039d300ed0d\")) {                    Plotly.newPlot(                        \"26e18305-b066-429a-8b19-e039d300ed0d\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"season=%{x}\\u003cbr\\u003eRuns=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[\"2007\\u002f08\",\"2009\",\"2009\\u002f10\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\\u002f21\",\"2021\",\"2022\",\"2023\",\"2024\"],\"xaxis\":\"x\",\"y\":[17937,16353,18883,21154,22453,22602,18931,18353,18862,18786,19901,19434,19416,18637,24395,25688,25971],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"season\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Runs\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Total Runs Scored per Season\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('26e18305-b066-429a-8b19-e039d300ed0d');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# What were the runs scored per match in different seasons?\n"
      ],
      "metadata": {
        "id": "arqiQUTqmTLX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "runs_per_match = season_runs / matches_per_season\n",
        "plt.figure(figsize=(15,5))\n",
        "plt.plot(runs_per_match.index, runs_per_match.values, marker='o', color='orange')\n",
        "plt.title(\"Average Runs per Match per Season\")\n",
        "plt.xlabel(\"Season\"); plt.ylabel(\"Runs per Match\")\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "id": "_hqA7fFBmSh3",
        "outputId": "cb6d087e-6ddd-4cbc-ecb3-21f521b9aa08"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Who has umpired the most?\n"
      ],
      "metadata": {
        "id": "9uUB_UUZ1H1N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "umpires = pd.concat([matches['umpire1'], matches['umpire2']]).value_counts().head(10)\n",
        "plt.figure(figsize=(12,5))\n",
        "sns.barplot(y=umpires.index, x=umpires.values, palette=\"coolwarm\")\n",
        "plt.title(\"Top 10 Umpires by Matches Officiated\")\n",
        "plt.xlabel(\"Matches\"); plt.ylabel(\"Umpire\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "EeLe7WhMm-zJ",
        "outputId": "1767a626-de77-479f-8b3c-debe33ce1115"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Which team has won the most tosses?\n"
      ],
      "metadata": {
        "id": "UZiOT_Oy1Sk0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "toss_winners = matches['toss_winner'].value_counts().head(10)\n",
        "plt.figure(figsize=(10,5))\n",
        "sns.barplot(y=toss_winners.index, x=toss_winners.values, palette=\"Blues_d\")\n",
        "plt.title(\"Teams with Most Toss Wins\")\n",
        "plt.xlabel(\"Toss Wins\"); plt.ylabel(\"Team\")\n",
        "for i, v in enumerate(toss_winners.values):\n",
        "    plt.text(v + 0.2, i, str(v), color='black', va='center',)\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "vYwUi9_FoAax",
        "outputId": "814cd115-5fb6-40ed-9cea-5ebc2df7e81b"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " # What does the team decide after winning the toss?\n"
      ],
      "metadata": {
        "id": "DM6ZEg4Z1YtV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "decisions = matches['toss_decision'].value_counts()\n",
        "\n",
        "fig = px.pie(names=decisions.index,\n",
        "             values=decisions.values,\n",
        "             title=\"Toss Decision Distribution\",\n",
        "             hover_data=[decisions.values],\n",
        "             labels={'names':'Decision', 'values':'Count'})\n",
        "\n",
        "fig.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "QACjfBQopYxt",
        "outputId": "6241a8c6-e00e-4f5f-dff8-b3af49a4c868"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"79817522-65ad-4d36-a3f6-b1f60627e275\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"79817522-65ad-4d36-a3f6-b1f60627e275\")) {                    Plotly.newPlot(                        \"79817522-65ad-4d36-a3f6-b1f60627e275\",                        [{\"customdata\":[[704],[391]],\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"Decision=%{label}\\u003cbr\\u003eCount=%{value}\\u003cbr\\u003ehover_data_0=%{customdata[0]}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"labels\":[\"field\",\"bat\"],\"legendgroup\":\"\",\"name\":\"\",\"showlegend\":true,\"values\":[704,391],\"type\":\"pie\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Toss Decision Distribution\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('79817522-65ad-4d36-a3f6-b1f60627e275');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Does winning the toss implies winning the game?\n",
        "\n"
      ],
      "metadata": {
        "id": "OYbcIJyo1jdP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "matches['toss_win_match_win'] = matches['toss_winner'] == matches['winner']\n",
        "toss_effect = matches['toss_win_match_win'].value_counts()\n",
        "plt.figure(figsize=(8,8))\n",
        "plt.pie(toss_effect, labels=['Yes','No'], autopct='%1.1f%%', colors=['gold','lightcoral'])\n",
        "plt.title(\"Does Winning Toss Help Win Match?\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 675
        },
        "id": "_wAY_keQpYuW",
        "outputId": "421903f1-5dbe-402f-944f-ed0902fc74e7"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Which all teams had won this tournament?\n",
        "\n"
      ],
      "metadata": {
        "id": "peiWWfCM1wpf"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 675
        },
        "id": "eddbc1bb",
        "outputId": "46d47b3b-93c2-48ab-d906-f9430d717e79"
      },
      "source": [
        "winners = matches.drop_duplicates('season', keep='last')[['season', 'winner']].set_index('season')['winner'].value_counts()\n",
        "\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.pie(winners.values, labels=winners.index, autopct='%1.1f%%', startangle=90,\n",
        "        colors=sns.color_palette(\"Greens_r\", len(winners)), wedgeprops={'width': 0.5})\n",
        "plt.title(\"IPL Tournament Winners (Donut Chart)\")\n",
        "plt.show()"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "# Which team has played the most number of matches?\n",
        "\n"
      ],
      "metadata": {
        "id": "q4VUfgiH2QLV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.bar(x=played.index, y=played.values,\n",
        "             title=\"Matches Played by Team\",\n",
        "             labels={'x':'Team','y':'Matches'},\n",
        "             color=played.index, color_discrete_sequence=px.colors.qualitative.Set2)\n",
        "\n",
        "fig.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "qLj5_-8XrWtm",
        "outputId": "1733a1c9-4bed-4247-88e9-e253431c9a9d"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"49acdd7c-0048-46c4-9d9b-3a14549f21ee\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"49acdd7c-0048-46c4-9d9b-3a14549f21ee\")) {                    Plotly.newPlot(                        \"49acdd7c-0048-46c4-9d9b-3a14549f21ee\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Mumbai Indians\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Mumbai Indians\",\"marker\":{\"color\":\"rgb(102,194,165)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Mumbai Indians\",\"offsetgroup\":\"Mumbai Indians\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Mumbai Indians\"],\"xaxis\":\"x\",\"y\":[261],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Kolkata Knight Riders\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Kolkata Knight Riders\",\"marker\":{\"color\":\"rgb(252,141,98)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Kolkata Knight Riders\",\"offsetgroup\":\"Kolkata Knight Riders\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Kolkata Knight Riders\"],\"xaxis\":\"x\",\"y\":[251],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Royal Challengers Bangalore\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Royal Challengers Bangalore\",\"marker\":{\"color\":\"rgb(141,160,203)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Royal Challengers Bangalore\",\"offsetgroup\":\"Royal Challengers Bangalore\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Royal Challengers Bangalore\"],\"xaxis\":\"x\",\"y\":[240],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Chennai Super Kings\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Chennai Super Kings\",\"marker\":{\"color\":\"rgb(231,138,195)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Chennai Super Kings\",\"offsetgroup\":\"Chennai Super Kings\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\"],\"xaxis\":\"x\",\"y\":[238],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Rajasthan Royals\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Rajasthan Royals\",\"marker\":{\"color\":\"rgb(166,216,84)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Rajasthan Royals\",\"offsetgroup\":\"Rajasthan Royals\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Rajasthan Royals\"],\"xaxis\":\"x\",\"y\":[221],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Kings XI Punjab\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Kings XI Punjab\",\"marker\":{\"color\":\"rgb(255,217,47)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Kings XI Punjab\",\"offsetgroup\":\"Kings XI Punjab\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Kings XI Punjab\"],\"xaxis\":\"x\",\"y\":[190],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Sunrisers Hyderabad\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sunrisers Hyderabad\",\"marker\":{\"color\":\"rgb(229,196,148)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sunrisers Hyderabad\",\"offsetgroup\":\"Sunrisers Hyderabad\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[182],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Delhi Daredevils\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Delhi Daredevils\",\"marker\":{\"color\":\"rgb(179,179,179)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Delhi Daredevils\",\"offsetgroup\":\"Delhi Daredevils\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Delhi Daredevils\"],\"xaxis\":\"x\",\"y\":[161],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Delhi Capitals\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Delhi Capitals\",\"marker\":{\"color\":\"rgb(102,194,165)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Delhi Capitals\",\"offsetgroup\":\"Delhi Capitals\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Delhi Capitals\"],\"xaxis\":\"x\",\"y\":[91],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Deccan Chargers\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Deccan Chargers\",\"marker\":{\"color\":\"rgb(252,141,98)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Deccan Chargers\",\"offsetgroup\":\"Deccan Chargers\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Deccan Chargers\"],\"xaxis\":\"x\",\"y\":[75],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Punjab Kings\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Punjab Kings\",\"marker\":{\"color\":\"rgb(141,160,203)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Punjab Kings\",\"offsetgroup\":\"Punjab Kings\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Punjab Kings\"],\"xaxis\":\"x\",\"y\":[56],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Pune Warriors\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Pune Warriors\",\"marker\":{\"color\":\"rgb(231,138,195)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Pune Warriors\",\"offsetgroup\":\"Pune Warriors\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Pune Warriors\"],\"xaxis\":\"x\",\"y\":[46],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Gujarat Titans\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Gujarat Titans\",\"marker\":{\"color\":\"rgb(166,216,84)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Gujarat Titans\",\"offsetgroup\":\"Gujarat Titans\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Gujarat Titans\"],\"xaxis\":\"x\",\"y\":[45],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Lucknow Super Giants\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Lucknow Super Giants\",\"marker\":{\"color\":\"rgb(255,217,47)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Lucknow Super Giants\",\"offsetgroup\":\"Lucknow Super Giants\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Lucknow Super Giants\"],\"xaxis\":\"x\",\"y\":[44],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Gujarat Lions\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Gujarat Lions\",\"marker\":{\"color\":\"rgb(229,196,148)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Gujarat Lions\",\"offsetgroup\":\"Gujarat Lions\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Gujarat Lions\"],\"xaxis\":\"x\",\"y\":[30],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Rising Pune Supergiant\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Rising Pune Supergiant\",\"marker\":{\"color\":\"rgb(179,179,179)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Rising Pune Supergiant\",\"offsetgroup\":\"Rising Pune Supergiant\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Rising Pune Supergiant\"],\"xaxis\":\"x\",\"y\":[16],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Royal Challengers Bengaluru\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Royal Challengers Bengaluru\",\"marker\":{\"color\":\"rgb(102,194,165)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Royal Challengers Bengaluru\",\"offsetgroup\":\"Royal Challengers Bengaluru\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Royal Challengers Bengaluru\"],\"xaxis\":\"x\",\"y\":[15],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Kochi Tuskers Kerala\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Kochi Tuskers Kerala\",\"marker\":{\"color\":\"rgb(252,141,98)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Kochi Tuskers Kerala\",\"offsetgroup\":\"Kochi Tuskers Kerala\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Kochi Tuskers Kerala\"],\"xaxis\":\"x\",\"y\":[14],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"color=Rising Pune Supergiants\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eMatches=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Rising Pune Supergiants\",\"marker\":{\"color\":\"rgb(141,160,203)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Rising Pune Supergiants\",\"offsetgroup\":\"Rising Pune Supergiants\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Rising Pune Supergiants\"],\"xaxis\":\"x\",\"y\":[14],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Team\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Matches\"}},\"legend\":{\"title\":{\"text\":\"color\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Matches Played by Team\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('49acdd7c-0048-46c4-9d9b-3a14549f21ee');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Is there any lucky venue for a particular team?\n"
      ],
      "metadata": {
        "id": "OgJCRHLS2Vtn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "venue_wins = matches.pivot_table(index='winner', columns='venue', values='id', aggfunc='count').fillna(0)\n",
        "venue_wins_reset = venue_wins.reset_index().melt(id_vars='winner', var_name='Venue', value_name='Wins')\n",
        "\n",
        "fig = px.bar(venue_wins_reset, x='winner', y='Wins', color='Venue',\n",
        "             title=\"Team Wins per Venue\",\n",
        "             labels={'winner':'Team', 'Wins':'Wins', 'Venue':'Venue'},\n",
        "             text='Wins')\n",
        "fig.update_layout(barmode='stack', xaxis={'categoryorder':'total descending'})\n",
        "fig.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "fuOeTgzpsUwp",
        "outputId": "7396799f-99e6-4764-d7be-c2b5067fb247"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"9d427a40-e1cb-430a-ba87-44fe5f88c657\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9d427a40-e1cb-430a-ba87-44fe5f88c657\")) {                    Plotly.newPlot(                        \"9d427a40-e1cb-430a-ba87-44fe5f88c657\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Arun Jaitley Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Arun Jaitley Stadium\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Arun Jaitley Stadium\",\"offsetgroup\":\"Arun Jaitley Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,4.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,4.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Arun Jaitley Stadium, Delhi\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Arun Jaitley Stadium, Delhi\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Arun Jaitley Stadium, Delhi\",\"offsetgroup\":\"Arun Jaitley Stadium, Delhi\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[2.0,0.0,6.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,3.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[2.0,0.0,6.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,3.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Barabati Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Barabati Stadium\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Barabati Stadium\",\"offsetgroup\":\"Barabati Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,3.0,0.0,0.0,0.0,0.0,1.0,0.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,3.0,0.0,0.0,0.0,0.0,1.0,0.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Barsapara Cricket Stadium, Guwahati\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Barsapara Cricket Stadium, Guwahati\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Barsapara Cricket Stadium, Guwahati\",\"offsetgroup\":\"Barsapara Cricket Stadium, Guwahati\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Bharat Ratna Shri Atal Bihari Vajpayee Ekana Cricket Stadium, Lucknow\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Bharat Ratna Shri Atal Bihari Vajpayee Ekana Cricket Stadium, Lucknow\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Bharat Ratna Shri Atal Bihari Vajpayee Ekana Cricket Stadium, Lucknow\",\"offsetgroup\":\"Bharat Ratna Shri Atal Bihari Vajpayee Ekana Cricket Stadium, Lucknow\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,7.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Brabourne Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Brabourne Stadium\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Brabourne Stadium\",\"offsetgroup\":\"Brabourne Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,2.0,0.0,0.0,1.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,0.0,2.0,0.0,0.0,1.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Brabourne Stadium, Mumbai\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Brabourne Stadium, Mumbai\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Brabourne Stadium, Mumbai\",\"offsetgroup\":\"Brabourne Stadium, Mumbai\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,4.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,2.0,0.0,2.0,3.0,0.0,0.0,0.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,4.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,2.0,0.0,2.0,3.0,0.0,0.0,0.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Buffalo Park\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Buffalo Park\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Buffalo Park\",\"offsetgroup\":\"Buffalo Park\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=De Beers Diamond Oval\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"De Beers Diamond Oval\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"De Beers Diamond Oval\",\"offsetgroup\":\"De Beers Diamond Oval\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Dr DY Patil Sports Academy\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Dr DY Patil Sports Academy\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Dr DY Patil Sports Academy\",\"offsetgroup\":\"Dr DY Patil Sports Academy\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[3.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,2.0,0.0,5.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[3.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,2.0,0.0,5.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Dr DY Patil Sports Academy, Mumbai\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Dr DY Patil Sports Academy, Mumbai\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Dr DY Patil Sports Academy, Mumbai\",\"offsetgroup\":\"Dr DY Patil Sports Academy, Mumbai\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[3.0,0.0,2.0,0.0,0.0,2.0,0.0,0.0,1.0,3.0,1.0,0.0,2.0,1.0,0.0,0.0,2.0,0.0,3.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[3.0,0.0,2.0,0.0,0.0,2.0,0.0,0.0,1.0,3.0,1.0,0.0,2.0,1.0,0.0,0.0,2.0,0.0,3.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium\",\"offsetgroup\":\"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[2.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,1.0,0.0,2.0,0.0,0.0,3.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[2.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,1.0,0.0,2.0,0.0,0.0,3.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium, Visakhapatnam\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium, Visakhapatnam\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium, Visakhapatnam\",\"offsetgroup\":\"Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium, Visakhapatnam\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Dubai International Cricket Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Dubai International Cricket Stadium\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Dubai International Cricket Stadium\",\"offsetgroup\":\"Dubai International Cricket Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[9.0,0.0,6.0,1.0,0.0,0.0,5.0,0.0,3.0,0.0,3.0,0.0,2.0,2.0,0.0,0.0,8.0,0.0,7.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[9.0,0.0,6.0,1.0,0.0,0.0,5.0,0.0,3.0,0.0,3.0,0.0,2.0,2.0,0.0,0.0,8.0,0.0,7.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Eden Gardens\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Eden Gardens\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Eden Gardens\",\"offsetgroup\":\"Eden Gardens\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[5.0,0.0,1.0,1.0,2.0,0.0,3.0,1.0,45.0,0.0,10.0,0.0,0.0,2.0,1.0,0.0,4.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[5.0,0.0,1.0,1.0,2.0,0.0,3.0,1.0,45.0,0.0,10.0,0.0,0.0,2.0,1.0,0.0,4.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Eden Gardens, Kolkata\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Eden Gardens, Kolkata\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Eden Gardens, Kolkata\",\"offsetgroup\":\"Eden Gardens, Kolkata\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,7.0,1.0,0.0,0.0,1.0,2.0,0.0,0.0,1.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,7.0,1.0,0.0,0.0,1.0,2.0,0.0,0.0,1.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Feroz Shah Kotla\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Feroz Shah Kotla\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Feroz Shah Kotla\",\"offsetgroup\":\"Feroz Shah Kotla\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[5.0,2.0,0.0,23.0,1.0,0.0,4.0,1.0,5.0,0.0,3.0,1.0,0.0,4.0,0.0,1.0,5.0,0.0,4.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[5.0,2.0,0.0,23.0,1.0,0.0,4.0,1.0,5.0,0.0,3.0,1.0,0.0,4.0,0.0,1.0,5.0,0.0,4.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Green Park\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Green Park\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Green Park\",\"offsetgroup\":\"Green Park\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,1.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,1.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Himachal Pradesh Cricket Association Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Himachal Pradesh Cricket Association Stadium\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Himachal Pradesh Cricket Association Stadium\",\"offsetgroup\":\"Himachal Pradesh Cricket Association Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,2.0,0.0,1.0,0.0,0.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,2.0,0.0,1.0,0.0,0.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Himachal Pradesh Cricket Association Stadium, Dharamsala\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Himachal Pradesh Cricket Association Stadium, Dharamsala\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Himachal Pradesh Cricket Association Stadium, Dharamsala\",\"offsetgroup\":\"Himachal Pradesh Cricket Association Stadium, Dharamsala\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Holkar Cricket Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Holkar Cricket Stadium\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Holkar Cricket Stadium\",\"offsetgroup\":\"Holkar Cricket Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,0.0,0.0,0.0,4.0,1.0,1.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,4.0,1.0,1.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=JSCA International Stadium Complex\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"JSCA International Stadium Complex\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"JSCA International Stadium Complex\",\"offsetgroup\":\"JSCA International Stadium Complex\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Kingsmead\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Kingsmead\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Kingsmead\",\"offsetgroup\":\"Kingsmead\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,2.0,0.0,3.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,3.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,2.0,0.0,3.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,3.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=M Chinnaswamy Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"M Chinnaswamy Stadium\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"M Chinnaswamy Stadium\",\"offsetgroup\":\"M Chinnaswamy Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[4.0,1.0,0.0,3.0,1.0,0.0,5.0,0.0,6.0,0.0,8.0,0.0,0.0,3.0,1.0,0.0,29.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[4.0,1.0,0.0,3.0,1.0,0.0,5.0,0.0,6.0,0.0,8.0,0.0,0.0,3.0,1.0,0.0,29.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=M Chinnaswamy Stadium, Bengaluru\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"M Chinnaswamy Stadium, Bengaluru\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"M Chinnaswamy Stadium, Bengaluru\",\"offsetgroup\":\"M Chinnaswamy Stadium, Bengaluru\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,4.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,4.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=M.Chinnaswamy Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"M.Chinnaswamy Stadium\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"M.Chinnaswamy Stadium\",\"offsetgroup\":\"M.Chinnaswamy Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,8.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,8.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=MA Chidambaram Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"MA Chidambaram Stadium\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"MA Chidambaram Stadium\",\"offsetgroup\":\"MA Chidambaram Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[7.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[7.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=MA Chidambaram Stadium, Chepauk\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"MA Chidambaram Stadium, Chepauk\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"MA Chidambaram Stadium, Chepauk\",\"offsetgroup\":\"MA Chidambaram Stadium, Chepauk\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[33.0,2.0,0.0,2.0,0.0,0.0,2.0,0.0,2.0,0.0,3.0,1.0,0.0,1.0,0.0,0.0,2.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[33.0,2.0,0.0,2.0,0.0,0.0,2.0,0.0,2.0,0.0,3.0,1.0,0.0,1.0,0.0,0.0,2.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=MA Chidambaram Stadium, Chepauk, Chennai\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"MA Chidambaram Stadium, Chepauk, Chennai\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"MA Chidambaram Stadium, Chepauk, Chennai\",\"offsetgroup\":\"MA Chidambaram Stadium, Chepauk, Chennai\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[10.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,3.0,1.0,3.0,0.0,3.0,1.0,0.0,0.0,3.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[10.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,3.0,1.0,3.0,0.0,3.0,1.0,0.0,0.0,3.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Maharaja Yadavindra Singh International Cricket Stadium, Mullanpur\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Maharaja Yadavindra Singh International Cricket Stadium, Mullanpur\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Maharaja Yadavindra Singh International Cricket Stadium, Mullanpur\",\"offsetgroup\":\"Maharaja Yadavindra Singh International Cricket Stadium, Mullanpur\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Maharashtra Cricket Association Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Maharashtra Cricket Association Stadium\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Maharashtra Cricket Association Stadium\",\"offsetgroup\":\"Maharashtra Cricket Association Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[5.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0,3.0,0.0,2.0,0.0,0.0,1.0,5.0,0.0,2.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[5.0,0.0,0.0,2.0,1.0,0.0,0.0,0.0,3.0,0.0,2.0,0.0,0.0,1.0,5.0,0.0,2.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Maharashtra Cricket Association Stadium, Pune\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Maharashtra Cricket Association Stadium, Pune\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Maharashtra Cricket Association Stadium, Pune\",\"offsetgroup\":\"Maharashtra Cricket Association Stadium, Pune\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0,2.0,0.0,0.0,2.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0,2.0,2.0,0.0,0.0,1.0,2.0,0.0,0.0,2.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Narendra Modi Stadium, Ahmedabad\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Narendra Modi Stadium, Ahmedabad\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Narendra Modi Stadium, Ahmedabad\",\"offsetgroup\":\"Narendra Modi Stadium, Ahmedabad\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,4.0,0.0,0.0,9.0,0.0,0.0,3.0,0.0,0.0,0.0,2.0,3.0,0.0,0.0,1.0,1.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,4.0,0.0,0.0,9.0,0.0,0.0,3.0,0.0,0.0,0.0,2.0,3.0,0.0,0.0,1.0,1.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Nehru Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Nehru Stadium\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Nehru Stadium\",\"offsetgroup\":\"Nehru Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,1.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,1.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=New Wanderers Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"New Wanderers Stadium\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"New Wanderers Stadium\",\"offsetgroup\":\"New Wanderers Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Newlands\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Newlands\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Newlands\",\"offsetgroup\":\"Newlands\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,2.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=OUTsurance Oval\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"OUTsurance Oval\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"OUTsurance Oval\",\"offsetgroup\":\"OUTsurance Oval\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Punjab Cricket Association IS Bindra Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Punjab Cricket Association IS Bindra Stadium\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Punjab Cricket Association IS Bindra Stadium\",\"offsetgroup\":\"Punjab Cricket Association IS Bindra Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Punjab Cricket Association IS Bindra Stadium, Mohali\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Punjab Cricket Association IS Bindra Stadium, Mohali\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Punjab Cricket Association IS Bindra Stadium, Mohali\",\"offsetgroup\":\"Punjab Cricket Association IS Bindra Stadium, Mohali\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,0.0,2.0,0.0,4.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,0.0,2.0,0.0,4.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Punjab Cricket Association IS Bindra Stadium, Mohali, Chandigarh\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Punjab Cricket Association IS Bindra Stadium, Mohali, Chandigarh\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Punjab Cricket Association IS Bindra Stadium, Mohali, Chandigarh\",\"offsetgroup\":\"Punjab Cricket Association IS Bindra Stadium, Mohali, Chandigarh\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Punjab Cricket Association Stadium, Mohali\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Punjab Cricket Association Stadium, Mohali\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Punjab Cricket Association Stadium, Mohali\",\"offsetgroup\":\"Punjab Cricket Association Stadium, Mohali\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[3.0,0.0,0.0,1.0,0.0,0.0,18.0,0.0,2.0,0.0,3.0,1.0,0.0,3.0,0.0,0.0,2.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[3.0,0.0,0.0,1.0,0.0,0.0,18.0,0.0,2.0,0.0,3.0,1.0,0.0,3.0,0.0,0.0,2.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Rajiv Gandhi International Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Rajiv Gandhi International Stadium\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Rajiv Gandhi International Stadium\",\"offsetgroup\":\"Rajiv Gandhi International Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Rajiv Gandhi International Stadium, Uppal\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Rajiv Gandhi International Stadium, Uppal\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Rajiv Gandhi International Stadium, Uppal\",\"offsetgroup\":\"Rajiv Gandhi International Stadium, Uppal\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[2.0,3.0,0.0,4.0,0.0,0.0,4.0,0.0,4.0,0.0,5.0,1.0,0.0,2.0,1.0,1.0,2.0,0.0,20.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[2.0,3.0,0.0,4.0,0.0,0.0,4.0,0.0,4.0,0.0,5.0,1.0,0.0,2.0,1.0,1.0,2.0,0.0,20.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Rajiv Gandhi International Stadium, Uppal, Hyderabad\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Rajiv Gandhi International Stadium, Uppal, Hyderabad\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Rajiv Gandhi International Stadium, Uppal, Hyderabad\",\"offsetgroup\":\"Rajiv Gandhi International Stadium, Uppal, Hyderabad\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,6.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,6.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Sardar Patel Stadium, Motera\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sardar Patel Stadium, Motera\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sardar Patel Stadium, Motera\",\"offsetgroup\":\"Sardar Patel Stadium, Motera\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,7.0,0.0,0.0,1.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,7.0,0.0,0.0,1.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Saurashtra Cricket Association Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Saurashtra Cricket Association Stadium\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Saurashtra Cricket Association Stadium\",\"offsetgroup\":\"Saurashtra Cricket Association Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,1.0,3.0,0.0,2.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,1.0,3.0,0.0,2.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Sawai Mansingh Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sawai Mansingh Stadium\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sawai Mansingh Stadium\",\"offsetgroup\":\"Sawai Mansingh Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[3.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,3.0,0.0,2.0,0.0,0.0,32.0,0.0,0.0,3.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[3.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,3.0,0.0,2.0,0.0,0.0,32.0,0.0,0.0,3.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Sawai Mansingh Stadium, Jaipur\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sawai Mansingh Stadium, Jaipur\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sawai Mansingh Stadium, Jaipur\",\"offsetgroup\":\"Sawai Mansingh Stadium, Jaipur\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,1.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,1.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Shaheed Veer Narayan Singh International Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Shaheed Veer Narayan Singh International Stadium\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Shaheed Veer Narayan Singh International Stadium\",\"offsetgroup\":\"Shaheed Veer Narayan Singh International Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Sharjah Cricket Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sharjah Cricket Stadium\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sharjah Cricket Stadium\",\"offsetgroup\":\"Sharjah Cricket Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[3.0,0.0,4.0,1.0,0.0,0.0,4.0,0.0,5.0,0.0,3.0,0.0,1.0,2.0,0.0,0.0,3.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[3.0,0.0,4.0,1.0,0.0,0.0,4.0,0.0,5.0,0.0,3.0,0.0,1.0,2.0,0.0,0.0,3.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Sheikh Zayed Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sheikh Zayed Stadium\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sheikh Zayed Stadium\",\"offsetgroup\":\"Sheikh Zayed Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[3.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,6.0,0.0,6.0,0.0,0.0,6.0,0.0,0.0,2.0,0.0,2.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[3.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,6.0,0.0,6.0,0.0,0.0,6.0,0.0,0.0,2.0,0.0,2.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=St George's Park\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"St George's Park\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"St George's Park\",\"offsetgroup\":\"St George's Park\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[2.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[2.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Subrata Roy Sahara Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Subrata Roy Sahara Stadium\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Subrata Roy Sahara Stadium\",\"offsetgroup\":\"Subrata Roy Sahara Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,3.0,0.0,2.0,4.0,0.0,1.0,0.0,0.0,2.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,3.0,0.0,2.0,4.0,0.0,1.0,0.0,0.0,2.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=SuperSport Park\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"SuperSport Park\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"SuperSport Park\",\"offsetgroup\":\"SuperSport Park\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[2.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,2.0,0.0,0.0,2.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[2.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,2.0,0.0,0.0,2.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Vidarbha Cricket Association Stadium, Jamtha\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Vidarbha Cricket Association Stadium, Jamtha\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Vidarbha Cricket Association Stadium, Jamtha\",\"offsetgroup\":\"Vidarbha Cricket Association Stadium, Jamtha\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Wankhede Stadium\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Wankhede Stadium\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Wankhede Stadium\",\"offsetgroup\":\"Wankhede Stadium\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[7.0,1.0,1.0,2.0,1.0,0.0,5.0,1.0,1.0,0.0,42.0,1.0,0.0,4.0,2.0,1.0,3.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[7.0,1.0,1.0,2.0,1.0,0.0,5.0,1.0,1.0,0.0,42.0,1.0,0.0,4.0,2.0,1.0,3.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Wankhede Stadium, Mumbai\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Wankhede Stadium, Mumbai\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Wankhede Stadium, Mumbai\",\"offsetgroup\":\"Wankhede Stadium, Mumbai\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[6.0,0.0,3.0,0.0,0.0,3.0,0.0,0.0,4.0,3.0,10.0,0.0,4.0,6.0,0.0,0.0,5.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[6.0,0.0,3.0,0.0,0.0,3.0,0.0,0.0,4.0,3.0,10.0,0.0,4.0,6.0,0.0,0.0,5.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Venue=Zayed Cricket Stadium, Abu Dhabi\\u003cbr\\u003eTeam=%{x}\\u003cbr\\u003eWins=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Zayed Cricket Stadium, Abu Dhabi\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Zayed Cricket Stadium, Abu Dhabi\",\"offsetgroup\":\"Zayed Cricket Stadium, Abu Dhabi\",\"orientation\":\"v\",\"showlegend\":true,\"text\":[1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0],\"textposition\":\"auto\",\"x\":[\"Chennai Super Kings\",\"Deccan Chargers\",\"Delhi Capitals\",\"Delhi Daredevils\",\"Gujarat Lions\",\"Gujarat Titans\",\"Kings XI Punjab\",\"Kochi Tuskers Kerala\",\"Kolkata Knight Riders\",\"Lucknow Super Giants\",\"Mumbai Indians\",\"Pune Warriors\",\"Punjab Kings\",\"Rajasthan Royals\",\"Rising Pune Supergiant\",\"Rising Pune Supergiants\",\"Royal Challengers Bangalore\",\"Royal Challengers Bengaluru\",\"Sunrisers Hyderabad\"],\"xaxis\":\"x\",\"y\":[1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,2.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Team\"},\"categoryorder\":\"total descending\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Wins\"}},\"legend\":{\"title\":{\"text\":\"Venue\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Team Wins per Venue\"},\"barmode\":\"stack\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('9d427a40-e1cb-430a-ba87-44fe5f88c657');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "# Particular Batsmen analysis - M S Dhoni\n"
      ],
      "metadata": {
        "id": "yVFz83Gk2gzk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "batsman = 'MS Dhoni'\n",
        "bat_data = deliveries[deliveries['batter'] == batsman]\n",
        "\n",
        "# Total runs, balls, 4s and 6s\n",
        "runs = bat_data['batsman_runs'].sum()\n",
        "balls = bat_data.shape[0]\n",
        "fours = (bat_data['batsman_runs'] == 4).sum()\n",
        "sixes = (bat_data['batsman_runs'] == 6).sum()\n",
        "\n",
        "# Pie chart of run distribution\n",
        "plt.figure(figsize=(6,6))\n",
        "plt.pie(\n",
        "    [fours, sixes, runs - (4*fours + 6*sixes)],\n",
        "    labels=['4s', '6s', 'Others'],\n",
        "    autopct='%1.1f%%',\n",
        "    colors=['gold', 'red', 'lightblue'],\n",
        "    startangle=140\n",
        ")\n",
        "plt.title(f\"Run Type Distribution for {batsman}\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "id": "DuYmPt2YvKNE",
        "outputId": "b8b495b5-9dea-4d72-8809-c467df0eda22"
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAfQAAAH4CAYAAAC8FB/xAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAVH9JREFUeJzt3Xd8VFX+//HXtMxMeiFU6QgoXRAFpK2s2L9gYW0r2Du2dVfX34p1Xbuu6NrWjq4rgmvD3isgKAooCNJLEtKTmUy7vz8CkRBKykzuzJ338/HIA+bOzZ3PzCR5zzn3nHNthmEYiIiISEKzm12AiIiItJwCXURExAIU6CIiIhagQBcREbEABbqIiIgFKNBFREQsQIEuIiJiAQp0ERERC1Cgi4iIWIACXZJWt27dmDZtWswfZ82aNdhsNp5++um6bdOmTSM9PT3mj72DzWbjxhtvbLXH29nbb7/N4MGD8Xg82Gw2SktLTakj3tx4443YbDaKiopa/bE//vhjbDYbH3/8cas/tsSOAj0OPP3009hstrovp9NJp06dmDZtGhs3bmz1erp161avnj197RxQZhs3blxdXXa7nczMTPr06cMf//hH3nvvvag9zltvvWVaMO5LPNa2bds2pkyZgtfr5aGHHuK5554jLS0tZo+38+/S559/3uB+wzDo3LkzNpuNY489tt59lZWVzJgxg/79+5OWlkZeXh6DBw/m8ssvZ9OmTXt93B0BuePL7XbTrl07xo0bx9///ncKCwuj+jxFdsdpdgHym5tvvpnu3bvj9/v5+uuvefrpp/n888/58ccf8Xg8rVbH/fffT2VlZd3tt956ixdffJH77ruPNm3a1G0fOXJkq9XUGPvttx+33347AFVVVfzyyy/MmTOH559/nilTpvD888/jcrnq9v/555+x25v2mfatt97ioYcealJwdu3aFZ/PV++xY2Fvtfl8PpzO1v91X7BgARUVFdxyyy1MmDCh1R7X4/HwwgsvcNhhh9Xb/sknn7Bhwwbcbne97cFgkDFjxvDTTz8xdepULrvsMiorK1m6dCkvvPACkydPpmPHjvt83OnTp3PwwQcTDocpLCzkyy+/ZMaMGdx7773897//5Xe/+11Un2dzjRkzBp/PR0pKitmlSBQp0OPIUUcdxbBhwwA499xzadOmDXfccQevvfYaU6ZMabU6Jk2aVO/2li1bePHFF5k0aRLdunVrtTqaKisrizPOOKPetn/84x9Mnz6dhx9+mG7dunHHHXfU3bfrH/VoC4VCRCIRUlJSWvUD2e6Y9fgFBQUAZGdnR+2YVVVV+2zlH3300bz88sv885//rPdB5oUXXmDo0KENurlfffVVFi9ezKxZszjttNPq3ef3+wkEAo2qbfTo0Zx00kn1tn3//fccccQRnHjiiSxbtowOHTo06lixZLfbTf+ZlOhTl3scGz16NACrVq2q2zZu3DjGjRvXYN9p06bVC9sd523vvvtuHnvsMXr27Inb7ebggw9mwYIFLaprxowZuFyu3XYjnn/++WRnZ+P3+4Ha7vtjjz2Wd999t+486oEHHsicOXMafG9paSlXXHEFnTt3xu1206tXL+644w4ikUiza3U4HPzzn//kwAMPZObMmZSVldXdt+s59GAwyE033cT++++Px+MhLy+Pww47rK7Lftq0aTz00EMA9bpXof7rff/999e93suWLdvtOfQdVq9ezcSJE0lLS6Njx47cfPPN7HwBxD2d69z1mHurbce2XVvuixcv5qijjiIzM5P09HQOP/xwvv7663r77OjC/uKLL7jqqqvIz88nLS2NyZMn77Mbedy4cUydOhWAgw8+GJvNVu/1fvnllxk6dCher5c2bdpwxhlnNDjFtGOswapVqzj66KPJyMjg9NNP3+vjApx66qls27at3umWQCDA7NmzGwQ2/PY7NmrUqAb3eTweMjMz9/mYezJo0CDuv/9+SktLmTlzZoP7S0tLmTZtGtnZ2WRlZXHWWWdRXV1db59QKMQtt9xS93PVrVs3/vrXv1JTU1Nvvx2/b59//jnDhw/H4/HQo0cPnn322Xr76Ry6NSnQ49iaNWsAyMnJafYxXnjhBe666y4uuOACbr31VtasWcMJJ5xAMBhs9jH/+Mc/EgqFeOmll+pt3/EH88QTT6z36X/lypX84Q9/4KijjuL222/H6XRy8skn1/tjW11dzdixY3n++ec588wz+ec//8moUaO47rrruOqqq5pdK9SG+qmnnkp1dfVuz6vucOONN3LTTTcxfvx4Zs6cyfXXX0+XLl1YtGgRABdccAG///3vAXjuuefqvnb21FNP8eCDD3L++edzzz33kJubu8fHC4fDHHnkkbRr144777yToUOHMmPGDGbMmNHk59iY2na2dOlSRo8ezffff8+f//xn/va3v/Hrr78ybtw4vvnmmwb7X3bZZXz//ffMmDGDiy66iNdff51LL710rzVdf/31nH/++UDt6aTnnnuOCy64AKj9oDBlyhQcDge333475513HnPmzOGwww5rMGguFAoxceJE2rZty913382JJ564z9ejW7dujBgxghdffLFu27x58ygrK+OUU05psH/Xrl0BePbZZ4nFFaVPOukkvF4v7777boP7pkyZQkVFBbfffjtTpkzh6aef5qabbqq3z7nnnssNN9zAQQcdxH333cfYsWO5/fbbd/tcfvnlF0466SR+//vfc88995CTk8O0adNYunRp1J+XxBlDTPfUU08ZgPH+++8bhYWFxvr1643Zs2cb+fn5htvtNtavX1+379ixY42xY8c2OMbUqVONrl271t3+9ddfDcDIy8sziouL67b/73//MwDj9ddfb3R9d911lwEYv/76a922ESNGGIcccki9/ebMmWMAxkcffVS3rWvXrgZgvPLKK3XbysrKjA4dOhhDhgyp23bLLbcYaWlpxooVK+od89prrzUcDoexbt26vdY4duxYo1+/fnu8f+7cuQZgPPDAA/Vqmzp1at3tQYMGGcccc8xeH+eSSy4xdvdrs+P1zszMNAoKCnZ731NPPVW3berUqQZgXHbZZXXbIpGIccwxxxgpKSlGYWGhYRiG8dFHHzV4Tfd0zD3VZhiGARgzZsyouz1p0iQjJSXFWLVqVd22TZs2GRkZGcaYMWPqtu342ZwwYYIRiUTqtl955ZWGw+EwSktLd/t4u37/ggUL6rYFAgGjbdu2Rv/+/Q2fz1e3/Y033jAA44YbbmjwOl177bV7fZzdPd7MmTONjIwMo7q62jAMwzj55JON8ePHG4ZR+97v/F5XV1cbffr0MQCja9euxrRp04x///vfxtatWxv1uDvep5dffnmP+wwaNMjIycmpuz1jxgwDMM4+++x6+02ePNnIy8uru/3dd98ZgHHuuefW2+9Pf/qTARgffvhh3bYdv2+ffvpp3baCggLD7XYbV199dYN6d/25ksSmFnocmTBhAvn5+XTu3JmTTjqJtLQ0XnvtNfbbb79mH/MPf/hDvRb+jm781atXt6jWM888k2+++abe6YBZs2bRuXNnxo4dW2/fjh07Mnny5LrbmZmZnHnmmSxevJgtW7YAtd2vo0ePJicnh6KiorqvCRMmEA6H+fTTT1tU744pYhUVFXvcJzs7m6VLl7Jy5cpmP86JJ55Ifn5+o/ffuZVrs9m49NJLCQQCvP/++82uYV/C4TDvvvsukyZNokePHnXbO3TowGmnncbnn39OeXl5ve85//zz63Xhjx49mnA4zNq1a5v8+AsXLqSgoICLL764Xk/OMcccQ9++fXnzzTcbfM9FF13U5MeZMmUKPp+PN954g4qKCt54443ddrcDeL1evvnmG6655hqgtgfhnHPOoUOHDlx22WUNurabIz09fbc/fxdeeGG926NHj2bbtm1178Fbb70F0KCn6uqrrwZo8HodeOCBdb/nAPn5+fTp06fFv/MS/xToceShhx7ivffeY/bs2Rx99NEUFRW1eOBWly5d6t3eEe4lJSUtOu4f/vAH3G43s2bNAqCsrIw33niD008/vd4ffoBevXo12Na7d2/gt9MKK1eu5O233yY/P7/e146R0TsGVzXXjlH7GRkZe9zn5ptvprS0lN69ezNgwACuueYalixZ0qTH6d69e6P3tdvt9QIVGr4usVBYWEh1dTV9+vRpcN8BBxxAJBJh/fr19bZH8+dox4eA3T1+3759G3xIcDqdzfpQu+Pn54UXXmDOnDmEw+EGA9Z2lpWVxZ133smaNWtYs2YN//73v+nTpw8zZ87klltuafLj76qysnK3P3/7em3Xrl2L3W6nV69e9fZr37492dnZDV6vXY+345gt/Z2X+KdAjyPDhw9nwoQJnHjiibz22mv079+f0047rd4Usl2DcYdwOLzb7Q6HY7fbjRaeJ8zJyeHYY4+tC/TZs2dTU1PTYJR5Y0UiEX7/+9/z3nvv7farMedN9+bHH38EaPBHcWdjxoxh1apVPPnkk/Tv358nnniCgw46iCeeeKLRj+P1eltU566a+n7HSqx+jhrD7XY3eXrhDqeddhrz5s3jkUce4aijjmr0aPuuXbty9tln88UXX5CdnV33c95cwWCQFStW7Pbnr7Gv7Z5+Fpp7PLEeBXqc2jFYaNOmTfVGxubk5Ox2pa3mdH221JlnnsmKFStYsGABs2bNYsiQIfTr16/Bfr/88kuDPyYrVqwAqBuZ37NnTyorK5kwYcJuv3bX6miscDjMCy+8QGpqaoN5ybvKzc3lrLPO4sUXX2T9+vUMHDiw3ujwxv5RbYxIJNKgG3TX12VHa23X93x373dja8vPzyc1NZWff/65wX0//fQTdrudzp07N+pYzbFjANruHv/nn3+uuz8aJk+ejN1u5+uvv95jd/ve5OTk0LNnTzZv3tyiOmbPno3P52PixIlN/t6uXbsSiUQanAraunUrpaWlUX29JLEp0OPYuHHjGD58OPfff3/dNLCePXvy008/1Zsy9P333/PFF1+0en1HHXVU3Vz5Tz75ZI+t802bNjF37ty62+Xl5Tz77LMMHjyY9u3bA7XnO7/66iveeeedBt9fWlpKKBRqVo3hcJjp06ezfPlypk+fvtfpR9u2bat3Oz09nV69etU7f7pj/nO0li/d+cOaYRjMnDkTl8vF4YcfDtT+MXc4HA3GEDz88MMNjtXY2hwOB0cccQT/+9//6nXtb926tW4xlpZM09qXYcOG0bZtWx555JF6r+28efNYvnw5xxxzTNQeKz09nX/961/ceOONHHfccXvc7/vvv9/tEqxr165l2bJluz090Fjff/89V1xxBTk5OVxyySVN/v6jjz4aqF3waWf33nsvQFRfL0lsWlgmzl1zzTWcfPLJPP3001x44YWcffbZ3HvvvUycOJFzzjmHgoICHnnkEfr169dgIFOsuVwuTjnlFGbOnFk3NWx3evfuzTnnnMOCBQto164dTz75JFu3buWpp56q2+eaa67htdde49hjj2XatGkMHTqUqqoqfvjhB2bPns2aNWvqrVK3O2VlZTz//PNA7TS4HSvFrVq1ilNOOWWf50EPPPBAxo0bx9ChQ8nNzWXhwoXMnj273sC1oUOHArUrgk2cOBGHw7HbqUON4fF4ePvtt5k6dSqHHHII8+bN48033+Svf/1r3cC6rKwsTj75ZB588EFsNhs9e/bkjTfe2O2YgqbUduutt/Lee+9x2GGHcfHFF+N0Onn00UepqanhzjvvbNbzaSyXy8Udd9zBWWedxdixYzn11FPZunUrDzzwAN26dePKK6+M6uPtmAu/N++99x4zZszg+OOP59BDDyU9PZ3Vq1fz5JNPUlNT0+iVAT/77DP8fj/hcJht27bxxRdf8Nprr5GVlcXcuXPrPsA2xaBBg5g6dSqPPfYYpaWljB07lvnz5/PMM88wadIkxo8f3+RjikWZOcReau1uas8O4XDY6Nmzp9GzZ08jFAoZhmEYzz//vNGjRw8jJSXFGDx4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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import plotly.express as px\n",
        "import pandas as pd\n",
        "\n",
        "# Select batsman\n",
        "batsman = 'MS Dhoni'\n",
        "bat_data = deliveries[deliveries['batter'] == batsman]\n",
        "\n",
        "# Count of runs by type\n",
        "run_types = [1, 2, 3, 4, 6]\n",
        "counts = [ (bat_data['batsman_runs'] == r).sum() for r in run_types ]\n",
        "\n",
        "# Create dataframe for Plotly\n",
        "df = pd.DataFrame({\n",
        "    'Run Type': [str(r) for r in run_types],\n",
        "    'Count': counts\n",
        "})\n",
        "\n",
        "# Interactive pie chart\n",
        "fig = px.pie(df, names='Run Type', values='Count',\n",
        "             title=f\"Run Type Distribution for {batsman}\",\n",
        "             color='Run Type',\n",
        "             color_discrete_sequence=px.colors.qualitative.Pastel)\n",
        "fig.update_traces(textposition='inside', textinfo='percent+label')\n",
        "fig.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "3vuIyQl1wtqK",
        "outputId": "1017013f-3ec8-4949-fda4-369abe808e1e"
      },
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"dc8ad628-e80d-437f-840f-69d2433fdddb\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"dc8ad628-e80d-437f-840f-69d2433fdddb\")) {                    Plotly.newPlot(                        \"dc8ad628-e80d-437f-840f-69d2433fdddb\",                        [{\"customdata\":[[\"1\"],[\"2\"],[\"3\"],[\"4\"],[\"6\"]],\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"Run Type=%{customdata[0]}\\u003cbr\\u003eCount=%{value}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"labels\":[\"1\",\"2\",\"3\",\"4\",\"6\"],\"legendgroup\":\"\",\"marker\":{\"colors\":[\"rgb(102, 197, 204)\",\"rgb(246, 207, 113)\",\"rgb(248, 156, 116)\",\"rgb(220, 176, 242)\",\"rgb(135, 197, 95)\"]},\"name\":\"\",\"showlegend\":true,\"values\":[1554,340,15,363,252],\"type\":\"pie\",\"textinfo\":\"percent+label\",\"textposition\":\"inside\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Run Type Distribution for MS Dhoni\"},\"piecolorway\":[\"rgb(102, 197, 204)\",\"rgb(246, 207, 113)\",\"rgb(248, 156, 116)\",\"rgb(220, 176, 242)\",\"rgb(135, 197, 95)\",\"rgb(158, 185, 243)\",\"rgb(254, 136, 177)\",\"rgb(201, 219, 116)\",\"rgb(139, 224, 164)\",\"rgb(180, 151, 231)\",\"rgb(179, 179, 179)\"]},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('dc8ad628-e80d-437f-840f-69d2433fdddb');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Who are the leading run-scorers of all time?\n",
        "\n",
        "# Who has hit the most number of 4's?\n",
        "\n",
        "# Who has hit the most number of 6's?\n",
        "\n"
      ],
      "metadata": {
        "id": "sqWbqjp02o06"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "top_runs = deliveries.groupby('batter')['batsman_runs'].sum().nlargest(10)\n",
        "\n",
        "top_fours = deliveries[deliveries['batsman_runs'] == 4]['batter'].value_counts().nlargest(10)\n",
        "\n",
        "top_sixes = deliveries[deliveries['batsman_runs'] == 6]['batter'].value_counts().nlargest(10)\n"
      ],
      "metadata": {
        "id": "h3xPIeB7ywit"
      },
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, axs = plt.subplots(1,3,figsize=(18,6))\n",
        "sns.barplot(y=top_batsmen.index, x=top_batsmen.values, ax=axs[0]); axs[0].set_title(\"Runs\")\n",
        "sns.barplot(y=top_fours.index, x=top_fours.values, ax=axs[1]); axs[1].set_title(\"Fours\")\n",
        "sns.barplot(y=top_sixes.index, x=top_sixes.values, ax=axs[2]); axs[2].set_title(\"Sixes\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 408
        },
        "id": "BHIZh8anzHD3",
        "outputId": "277306c7-01c8-4b98-87a0-16ac6682cb06"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Sixes')"
            ]
          },
          "metadata": {},
          "execution_count": 97
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_combined = pd.DataFrame({\n",
        "    'Batsman': top_runs.index,\n",
        "    'Runs': top_runs.values,\n",
        "    'Fours': [top_fours.get(b, 0) for b in top_runs.index],\n",
        "    'Sixes': [top_sixes.get(b, 0) for b in top_runs.index]\n",
        "})\n",
        "\n",
        "fig = px.bar(df_combined, x='Batsman', y=['Runs','Fours','Sixes'],\n",
        "             title=\"Top Batsmen: Runs, 4s, 6s\",\n",
        "             barmode='group', text_auto=True)\n",
        "fig.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "XT8js6jQy9rQ",
        "outputId": "d0f1be6f-ad95-4af6-8533-e055305403e1"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"32630fe1-3ce1-4eee-a8d6-fbb07c035a5a\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"32630fe1-3ce1-4eee-a8d6-fbb07c035a5a\")) {                    Plotly.newPlot(                        \"32630fe1-3ce1-4eee-a8d6-fbb07c035a5a\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"variable=Runs\\u003cbr\\u003eBatsman=%{x}\\u003cbr\\u003evalue=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Runs\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Runs\",\"offsetgroup\":\"Runs\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"texttemplate\":\"%{y}\",\"x\":[\"V Kohli\",\"S Dhawan\",\"RG Sharma\",\"DA Warner\",\"SK Raina\",\"MS Dhoni\",\"AB de Villiers\",\"CH Gayle\",\"RV Uthappa\",\"KD Karthik\"],\"xaxis\":\"x\",\"y\":[8014,6769,6630,6567,5536,5243,5181,4997,4954,4843],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"variable=Fours\\u003cbr\\u003eBatsman=%{x}\\u003cbr\\u003evalue=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Fours\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Fours\",\"offsetgroup\":\"Fours\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"texttemplate\":\"%{y}\",\"x\":[\"V Kohli\",\"S Dhawan\",\"RG Sharma\",\"DA Warner\",\"SK Raina\",\"MS Dhoni\",\"AB de Villiers\",\"CH Gayle\",\"RV Uthappa\",\"KD Karthik\"],\"xaxis\":\"x\",\"y\":[708,768,599,663,506,0,0,0,481,466],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"variable=Sixes\\u003cbr\\u003eBatsman=%{x}\\u003cbr\\u003evalue=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sixes\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sixes\",\"offsetgroup\":\"Sixes\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"texttemplate\":\"%{y}\",\"x\":[\"V Kohli\",\"S Dhawan\",\"RG Sharma\",\"DA Warner\",\"SK Raina\",\"MS Dhoni\",\"AB de Villiers\",\"CH Gayle\",\"RV Uthappa\",\"KD Karthik\"],\"xaxis\":\"x\",\"y\":[273,0,281,236,204,252,253,359,0,0],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Batsman\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"value\"}},\"legend\":{\"title\":{\"text\":\"variable\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Top Batsmen: Runs, 4s, 6s\"},\"barmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('32630fe1-3ce1-4eee-a8d6-fbb07c035a5a');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Who has won the most Man Of the Match(MOM) awards?"
      ],
      "metadata": {
        "id": "jl934MGr27J-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "mom = matches['player_of_match'].value_counts().head(10)\n",
        "\n",
        "plt.figure(figsize=(10,6))\n",
        "bars = sns.barplot(y=mom.index, x=mom.values, palette='crest')\n",
        "plt.title(\"Top 10 Man of the Match Winners\")\n",
        "plt.xlabel(\"Count\")\n",
        "\n",
        "for bar in bars.patches:\n",
        "    width = bar.get_width()\n",
        "    plt.text(width + 0.2, bar.get_y() + bar.get_height()/2,  # x, y position\n",
        "             int(width), ha='left', va='center')  # text alignment\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "f4enRQrEzeu8",
        "outputId": "91e0cc98-63f8-4160-bdb2-e78c5cf94c92"
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Who are 10 Highest Wicket-Takers in IPL?"
      ],
      "metadata": {
        "id": "izoxleeE3RjR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import plotly.express as px\n",
        "top_wicket_takers = deliveries[deliveries['is_wicket'] == 1]['bowler'].value_counts().nlargest(10)\n",
        "df_wickets = pd.DataFrame({\n",
        "    'Bowler': top_wicket_takers.index,\n",
        "    'Wickets': top_wicket_takers.values\n",
        "})\n",
        "\n",
        "fig = px.bar(df_wickets, x='Wickets', y='Bowler', orientation='h',\n",
        "             title=\"Top 10 Highest Wicket-Takers in IPL\",\n",
        "             text='Wickets', color='Wickets', color_continuous_scale='Viridis')\n",
        "fig.update_traces(textposition='inside')\n",
        "fig.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "zAr4ZhFVz_9k",
        "outputId": "79a76154-9a70-4673-c463-27f04a35c7b5"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"f1e1da4a-f0d4-4dbf-a5fc-2ee5d4ecddb2\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f1e1da4a-f0d4-4dbf-a5fc-2ee5d4ecddb2\")) {                    Plotly.newPlot(                        \"f1e1da4a-f0d4-4dbf-a5fc-2ee5d4ecddb2\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Wickets=%{marker.color}\\u003cbr\\u003eBowler=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[213,207,201,200,198,195,188,183,182,169],\"coloraxis\":\"coloraxis\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"h\",\"showlegend\":false,\"text\":[213.0,207.0,201.0,200.0,198.0,195.0,188.0,183.0,182.0,169.0],\"textposition\":\"inside\",\"x\":[213,207,201,200,198,195,188,183,182,169],\"xaxis\":\"x\",\"y\":[\"YS Chahal\",\"DJ Bravo\",\"PP Chawla\",\"SP Narine\",\"R Ashwin\",\"B Kumar\",\"SL Malinga\",\"A Mishra\",\"JJ Bumrah\",\"RA Jadeja\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Wickets\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Bowler\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Wickets\"}},\"colorscale\":[[0.0,\"#440154\"],[0.1111111111111111,\"#482878\"],[0.2222222222222222,\"#3e4989\"],[0.3333333333333333,\"#31688e\"],[0.4444444444444444,\"#26828e\"],[0.5555555555555556,\"#1f9e89\"],[0.6666666666666666,\"#35b779\"],[0.7777777777777778,\"#6ece58\"],[0.8888888888888888,\"#b5de2b\"],[1.0,\"#fde725\"]]},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Top 10 Highest Wicket-Takers in IPL\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('f1e1da4a-f0d4-4dbf-a5fc-2ee5d4ecddb2');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}